#pragma once
#include<iostream>
#include<string>
using namespace std;

class String
{
	char*a;
	int size;
public:
	String();
	String(char*);
	String(const String&);
	~String();
	void print();
	String& operator=(const String&);		// (=) assingment operator overloading for obejcts...
	String& operator=(char*);				// (=) assinging an charactor string to String object...
	String operator+(const String&)const;		// + operator overloading...
	bool operator==(const String&)const;	// == operator overloading...
	bool operator!=(const String&)const;	// != operator overloading...
	bool operator!();						// !  operator overloading...
	bool operator<(const String&)const;		// <  operator overloading...
	bool operator>(const String&)const;		// >  operator overloading...
	bool operator>=(const String&)const;	// >= operator overloading...
	bool operator<=(const String&)const;	// <= operator overloading...
	char operator[](unsigned int)const;		// [] operator overloading...
};

