#pragma once
#include<iostream>
#include<conio.h>
using namespace std;

class Time
{
private:
	int hour;
	int min;
	int sec;
	static int count;
	bool validate(int, int, int);
public:
	Time();
	Time(Time&);
	Time(int,int,int);
	static int getNoOfObjects();
	void setTime(int, int, int);
	void printTime()const;
	void nextTime(int);
	Time& operator=(const Time&);		// assingment operator (=) overloading...
	Time& operator++();					// pre increment...
	Time operator++(int);				// post increment...
	Time& operator--();					// pre decrement...
	Time operator--(int);				// post decrement...
	Time operator-(const Time&)const;	// -  operator overloading...
	Time operator+(const Time&)const;	// +  operator overloading...
	void operator+=(const Time&);		// += operator overloading...
	void operator-=(const Time&);		// -= operator overloading...
	bool operator==(const Time&)const;	// == operator overloading...
	bool operator!=(const Time&)const;	// != operator overloading...
	bool operator>(const Time&)const;	// >  operator overloading...
	bool operator<(const Time&)const;	// <  operator overloading...
	bool operator>=(const Time&)const;	// >= operator overloading...
	bool operator<=(const Time&)const;	// >= operator overloading...

};